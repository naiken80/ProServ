import { notFound } from 'next/navigation';

import { DashboardShell } from '../../../../components/layout/dashboard-shell';
import { Badge } from '../../../../components/ui/badge';
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from '../../../../components/ui/card';
import { projectSummaries } from '../../../../data/mock-projects';
import { formatCurrency, formatDate, formatPercent } from '../../../../lib/formatters';

interface ProjectPageProps {
  params: Promise<{ id: string }>;
}

export default async function ProjectDetailPage({ params }: ProjectPageProps) {
  const { id } = await params;
  const project = projectSummaries.find((item) => item.id === id);

  if (!project) {
    notFound();
  }

  return (
    <DashboardShell className="space-y-8">
      <div className="flex flex-col gap-2 md:flex-row md:items-center md:justify-between">
        <div>
          <h1 className="text-2xl font-semibold tracking-tight">{project.name}</h1>
          <p className="text-sm text-muted-foreground">{project.client}</p>
        </div>
        <Badge variant="outline">{formatCurrency(project.totalValue, project.currency)}</Badge>
      </div>
      <div className="grid gap-6 md:grid-cols-2">
        <Card>
          <CardHeader>
            <CardTitle>Commercial snapshot</CardTitle>
            <CardDescription>Key metrics for the active estimate version.</CardDescription>
          </CardHeader>
          <CardContent className="grid gap-4 md:grid-cols-2">
            <div>
              <p className="text-xs text-muted-foreground">Delivery window</p>
              <p className="text-sm font-medium">
                {formatDate(project.startDate)}
                {project.endDate ? ` – ${formatDate(project.endDate)}` : ' • TBD'}
              </p>
            </div>
            <div>
              <p className="text-xs text-muted-foreground">Target margin</p>
              <p className="text-sm font-medium">{formatPercent(project.margin)}</p>
            </div>
            <div>
              <p className="text-xs text-muted-foreground">Engagement lead</p>
              <p className="text-sm font-medium">{project.owner}</p>
            </div>
            <div>
              <p className="text-xs text-muted-foreground">Status</p>
              <p className="text-sm font-medium capitalize">{project.status}</p>
            </div>
          </CardContent>
        </Card>
        <Card>
          <CardHeader>
            <CardTitle>Next actions</CardTitle>
            <CardDescription>Automated nudges generated by the anomaly detectors.</CardDescription>
          </CardHeader>
          <CardContent className="space-y-3 text-sm text-muted-foreground">
            <p>• Run staffing optimizer to rebalance solution architect load for weeks 18-20.</p>
            <p>• Lock FX snapshot ahead of rate review on {formatDate(project.updatedAt)}.</p>
            <p>• Prepare margin variance summary for steering committee.</p>
          </CardContent>
        </Card>
      </div>
    </DashboardShell>
  );
}
